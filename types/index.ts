/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: 'params=single-object'
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: 'return=representation' | 'return=minimal' | 'return=none'
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: 'count=none'
  /** @description Filtering Columns */
  select: string
  /** @description On Conflict */
  on_conflict: string
  /** @description Ordering */
  order: string
  /** @description Limiting and Pagination */
  range: string
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string
  /** @description Limiting and Pagination */
  offset: string
  /** @description Limiting and Pagination */
  limit: string
  /** @description accounts */
  'body.accounts': definitions['accounts']
  /**
   * Format: uuid
   * @description primary key
   */
  'rowFilter.accounts.id': string
  /**
   * Format: text
   * @description id used by external service
   */
  'rowFilter.accounts.service_id': string
  /**
   * Format: timestamp with time zone
   * @description time of last edit on client
   */
  'rowFilter.accounts.client_rev_at': string
  /**
   * Format: text
   * @description user editing last on client
   */
  'rowFilter.accounts.client_rev_by': string
  /**
   * Format: timestamp with time zone
   * @description time of last edit on server
   */
  'rowFilter.accounts.server_rev_at': string
  /** Format: boolean */
  'rowFilter.accounts.deleted': string
  /** @description field_types */
  'body.field_types': definitions['field_types']
  /**
   * Format: text
   * @description explains the version type
   */
  'rowFilter.field_types.value': string
  /**
   * Format: smallint
   * @description enables sorting at will
   */
  'rowFilter.field_types.sort': string
  /** Format: text */
  'rowFilter.field_types.comment': string
  /**
   * Format: timestamp with time zone
   * @description time of last edit on server
   */
  'rowFilter.field_types.server_rev_at': string
  /** Format: boolean */
  'rowFilter.field_types.deleted': string
  /** @description fields */
  'body.fields': definitions['fields']
  /**
   * Format: uuid
   * @description primary key
   */
  'rowFilter.fields.id': string
  /**
   * Format: uuid
   * @description associated table
   */
  'rowFilter.fields.table_id': string
  /**
   * Format: text
   * @description name for use in db and url (lowercase, no special characters)
   */
  'rowFilter.fields.name': string
  /**
   * Format: text
   * @description name for use when labeling
   */
  'rowFilter.fields.label': string
  /**
   * Format: smallint
   * @description enables ordering the field list of a table
   */
  'rowFilter.fields.ord': string
  /**
   * Format: boolean
   * @description is this table used as an id in the users own system?
   */
  'rowFilter.fields.is_internal_id': string
  /**
   * Format: text
   * @description what type of data will populate this field?
   */
  'rowFilter.fields.field_type': string
  /**
   * Format: text
   * @description what type of widget shall be used to enter data?
   */
  'rowFilter.fields.widget_type': string
  /**
   * Format: uuid
   * @description for fields with field_type options-few and options-many: what table contains the options?
   */
  'rowFilter.fields.options_table': string
  /**
   * Format: text
   * @description Goal: Project-admin can pre-set standard values. These are either real values (that have to be converted from string when used and field_type is not a string). Or instructions like: last(), now()...
   */
  'rowFilter.fields.standard_value': string
  /**
   * Format: timestamp with time zone
   * @description time of last edit on client
   */
  'rowFilter.fields.client_rev_at': string
  /**
   * Format: text
   * @description user editing last on client
   */
  'rowFilter.fields.client_rev_by': string
  /**
   * Format: timestamp with time zone
   * @description time of last edit on server
   */
  'rowFilter.fields.server_rev_at': string
  /** Format: boolean */
  'rowFilter.fields.deleted': string
  /** @description file_revs */
  'body.file_revs': definitions['file_revs']
  /**
   * Format: uuid
   * @description primary key
   */
  'rowFilter.file_revs.id': string
  /** Format: uuid */
  'rowFilter.file_revs.row_id': string
  /**
   * Format: uuid
   * @description key of table files
   */
  'rowFilter.file_revs.file_id': string
  /** Format: uuid */
  'rowFilter.file_revs.field_id': string
  /** Format: text */
  'rowFilter.file_revs.filename': string
  /** Format: text */
  'rowFilter.file_revs.url': string
  /** Format: integer */
  'rowFilter.file_revs.version': string
  /** Format: boolean */
  'rowFilter.file_revs.deleted': string
  /** Format: timestamp with time zone */
  'rowFilter.file_revs.client_rev_at': string
  /** Format: text */
  'rowFilter.file_revs.client_rev_by': string
  /** Format: timestamp with time zone */
  'rowFilter.file_revs.server_rev_at': string
  /**
   * Format: text
   * @description hashed value the fields: file_id, field_id, filename, hash, version, deleted
   */
  'rowFilter.file_revs.rev': string
  /**
   * Format: text
   * @description hash of the previous revision
   */
  'rowFilter.file_revs.parent_rev': string
  /**
   * Format: ARRAY
   * @description array of hashes of all previous revisions
   */
  'rowFilter.file_revs.revisions': string
  /**
   * Format: integer
   * @description depth of the revision tree
   */
  'rowFilter.file_revs.depth': string
  /** @description files */
  'body.files': definitions['files']
  /**
   * Format: uuid
   * @description primary key. used as filename in internal and cloud storage
   */
  'rowFilter.files.id': string
  /**
   * Format: uuid
   * @description associated row
   */
  'rowFilter.files.row_id': string
  /**
   * Format: uuid
   * @description associated field
   */
  'rowFilter.files.field_id': string
  /**
   * Format: text
   * @description filename is set to this when exporting files
   */
  'rowFilter.files.filename': string
  /**
   * Format: text
   * @description url to download the file at
   */
  'rowFilter.files.url': string
  /**
   * Format: integer
   * @description is incremented on every edit of a pre-existing file. Enables clients to re-sync
   */
  'rowFilter.files.version': string
  /**
   * Format: boolean
   * @description marks if the file is deleted
   */
  'rowFilter.files.deleted': string
  /**
   * Format: timestamp with time zone
   * @description time of last edit on client
   */
  'rowFilter.files.client_rev_at': string
  /**
   * Format: text
   * @description user editing last on client
   */
  'rowFilter.files.client_rev_by': string
  /**
   * Format: timestamp with time zone
   * @description time of last edit on server
   */
  'rowFilter.files.server_rev_at': string
  /** Format: text */
  'rowFilter.files.rev': string
  /** Format: text */
  'rowFilter.files.parent_rev': string
  /** Format: ARRAY */
  'rowFilter.files.revisions': string
  /** Format: integer */
  'rowFilter.files.depth': string
  /** Format: ARRAY */
  'rowFilter.files.conflicts': string
  /** @description news */
  'body.news': definitions['news']
  /**
   * Format: uuid
   * @description primary key
   */
  'rowFilter.news.id': string
  /**
   * Format: timestamp with time zone
   * @description time the news was created
   */
  'rowFilter.news.time': string
  /**
   * Format: text
   * @description associated version_type
   */
  'rowFilter.news.version_type': string
  /**
   * Format: text
   * @description version the news refers to
   */
  'rowFilter.news.version': string
  /**
   * Format: text
   * @description this is the news
   */
  'rowFilter.news.message': string
  /**
   * Format: timestamp with time zone
   * @description time of last edit on server
   */
  'rowFilter.news.server_rev_at': string
  /** Format: boolean */
  'rowFilter.news.deleted': string
  /** @description news_delivery */
  'body.news_delivery': definitions['news_delivery']
  /**
   * Format: uuid
   * @description primary key
   */
  'rowFilter.news_delivery.id': string
  /**
   * Format: uuid
   * @description associated news
   */
  'rowFilter.news_delivery.news_id': string
  /**
   * Format: uuid
   * @description associated user
   */
  'rowFilter.news_delivery.user_id': string
  /**
   * Format: timestamp with time zone
   * @description time of last edit on server
   */
  'rowFilter.news_delivery.server_rev_at': string
  /** Format: boolean */
  'rowFilter.news_delivery.deleted': string
  /** @description option_types */
  'body.option_types': definitions['option_types']
  /**
   * Format: uuid
   * @description the id to use if id instead of value is to be saved
   */
  'rowFilter.option_types.id': string
  /**
   * Format: text
   * @description explains the option type
   */
  'rowFilter.option_types.value': string
  /**
   * Format: boolean
   * @description wether to save id instead of value
   */
  'rowFilter.option_types.save_id': string
  /**
   * Format: smallint
   * @description enables sorting at will
   */
  'rowFilter.option_types.sort': string
  /** Format: text */
  'rowFilter.option_types.comment': string
  /**
   * Format: timestamp with time zone
   * @description time of last edit on server
   */
  'rowFilter.option_types.server_rev_at': string
  /** Format: boolean */
  'rowFilter.option_types.deleted': string
  /** @description project_editors */
  'body.project_editors': definitions['project_editors']
  /** Format: uuid */
  'rowFilter.project_editors.id': string
  /** Format: uuid */
  'rowFilter.project_editors.project_id': string
  /** Format: text */
  'rowFilter.project_editors.user_email': string
  /** Format: text */
  'rowFilter.project_editors.role': string
  /** Format: timestamp with time zone */
  'rowFilter.project_editors.client_rev_at': string
  /** Format: text */
  'rowFilter.project_editors.client_rev_by': string
  /** Format: timestamp with time zone */
  'rowFilter.project_editors.server_rev_at': string
  /** Format: boolean */
  'rowFilter.project_editors.deleted': string
  /** @description project_managers */
  'body.project_managers': definitions['project_managers']
  /** Format: uuid */
  'rowFilter.project_managers.id': string
  /** Format: uuid */
  'rowFilter.project_managers.project_id': string
  /** Format: text */
  'rowFilter.project_managers.user_email': string
  /** Format: text */
  'rowFilter.project_managers.role': string
  /** Format: timestamp with time zone */
  'rowFilter.project_managers.client_rev_at': string
  /** Format: text */
  'rowFilter.project_managers.client_rev_by': string
  /** Format: timestamp with time zone */
  'rowFilter.project_managers.server_rev_at': string
  /** Format: boolean */
  'rowFilter.project_managers.deleted': string
  /** @description project_readers */
  'body.project_readers': definitions['project_readers']
  /** Format: uuid */
  'rowFilter.project_readers.id': string
  /** Format: uuid */
  'rowFilter.project_readers.project_id': string
  /** Format: text */
  'rowFilter.project_readers.user_email': string
  /** Format: text */
  'rowFilter.project_readers.role': string
  /** Format: timestamp with time zone */
  'rowFilter.project_readers.client_rev_at': string
  /** Format: text */
  'rowFilter.project_readers.client_rev_by': string
  /** Format: timestamp with time zone */
  'rowFilter.project_readers.server_rev_at': string
  /** Format: boolean */
  'rowFilter.project_readers.deleted': string
  /** @description project_tile_layers */
  'body.project_tile_layers': definitions['project_tile_layers']
  /** Format: uuid */
  'rowFilter.project_tile_layers.id': string
  /** Format: text */
  'rowFilter.project_tile_layers.label': string
  /** Format: smallint */
  'rowFilter.project_tile_layers.ord': string
  /** Format: boolean */
  'rowFilter.project_tile_layers.active': string
  /** Format: uuid */
  'rowFilter.project_tile_layers.project_id': string
  /** Format: text */
  'rowFilter.project_tile_layers.url_template': string
  /** Format: ARRAY */
  'rowFilter.project_tile_layers.subdomains': string
  /** Format: numeric */
  'rowFilter.project_tile_layers.max_zoom': string
  /** Format: numeric */
  'rowFilter.project_tile_layers.min_zoom': string
  /** Format: numeric */
  'rowFilter.project_tile_layers.opacity': string
  /** Format: text */
  'rowFilter.project_tile_layers.wms_base_url': string
  /** Format: text */
  'rowFilter.project_tile_layers.wms_format': string
  /** Format: ARRAY */
  'rowFilter.project_tile_layers.wms_layers': string
  /** Format: jsonb */
  'rowFilter.project_tile_layers.wms_parameters': string
  /** Format: text */
  'rowFilter.project_tile_layers.wms_request': string
  /** Format: text */
  'rowFilter.project_tile_layers.wms_service': string
  /** Format: ARRAY */
  'rowFilter.project_tile_layers.wms_styles': string
  /** Format: boolean */
  'rowFilter.project_tile_layers.wms_transparent': string
  /** Format: text */
  'rowFilter.project_tile_layers.wms_version': string
  /** Format: timestamp with time zone */
  'rowFilter.project_tile_layers.client_rev_at': string
  /** Format: text */
  'rowFilter.project_tile_layers.client_rev_by': string
  /** Format: timestamp with time zone */
  'rowFilter.project_tile_layers.server_rev_at': string
  /** Format: boolean */
  'rowFilter.project_tile_layers.deleted': string
  /** @description project_users */
  'body.project_users': definitions['project_users']
  /**
   * Format: uuid
   * @description primary key
   */
  'rowFilter.project_users.id': string
  /**
   * Format: uuid
   * @description associated project
   */
  'rowFilter.project_users.project_id': string
  /**
   * Format: text
   * @description associated user
   */
  'rowFilter.project_users.user_email': string
  /**
   * Format: text
   * @description associated role
   */
  'rowFilter.project_users.role': string
  /**
   * Format: timestamp with time zone
   * @description time of last edit on client
   */
  'rowFilter.project_users.client_rev_at': string
  /**
   * Format: text
   * @description user editing last on client
   */
  'rowFilter.project_users.client_rev_by': string
  /**
   * Format: timestamp with time zone
   * @description time of last edit on server
   */
  'rowFilter.project_users.server_rev_at': string
  /** Format: boolean */
  'rowFilter.project_users.deleted': string
  /** @description projects */
  'body.projects': definitions['projects']
  /**
   * Format: uuid
   * @description primary key
   */
  'rowFilter.projects.id': string
  /**
   * Format: uuid
   * @description associated account
   */
  'rowFilter.projects.account_id': string
  /**
   * Format: text
   * @description name for use in db and url (lowercase, no special characters)
   */
  'rowFilter.projects.name': string
  /**
   * Format: text
   * @description name for use when labeling
   */
  'rowFilter.projects.label': string
  /**
   * Format: integer
   * @description crs used in geometry fields
   */
  'rowFilter.projects.crs': string
  /**
   * Format: timestamp with time zone
   * @description time of last edit on client
   */
  'rowFilter.projects.client_rev_at': string
  /**
   * Format: text
   * @description user editing last on client
   */
  'rowFilter.projects.client_rev_by': string
  /**
   * Format: timestamp with time zone
   * @description time of last edit on server
   */
  'rowFilter.projects.server_rev_at': string
  /** Format: boolean */
  'rowFilter.projects.deleted': string
  /** @description rel_types */
  'body.rel_types': definitions['rel_types']
  /**
   * Format: text
   * @description the relation type
   */
  'rowFilter.rel_types.value': string
  /**
   * Format: smallint
   * @description enables sorting at will
   */
  'rowFilter.rel_types.sort': string
  /**
   * Format: text
   * @description explains the version type
   */
  'rowFilter.rel_types.comment': string
  /**
   * Format: timestamp with time zone
   * @description time of last edit on server
   */
  'rowFilter.rel_types.server_rev_at': string
  /** Format: boolean */
  'rowFilter.rel_types.deleted': string
  /** @description role_types */
  'body.role_types': definitions['role_types']
  /**
   * Format: text
   * @description the role
   */
  'rowFilter.role_types.value': string
  /**
   * Format: smallint
   * @description enables sorting at will
   */
  'rowFilter.role_types.sort': string
  /**
   * Format: text
   * @description explains the role
   */
  'rowFilter.role_types.comment': string
  /**
   * Format: timestamp with time zone
   * @description time of last edit on server
   */
  'rowFilter.role_types.server_rev_at': string
  /** Format: boolean */
  'rowFilter.role_types.deleted': string
  /** @description row_revs */
  'body.row_revs': definitions['row_revs']
  /**
   * Format: uuid
   * @description primary key
   */
  'rowFilter.row_revs.id': string
  /**
   * Format: uuid
   * @description key of table rows
   */
  'rowFilter.row_revs.row_id': string
  /** Format: uuid */
  'rowFilter.row_revs.table_id': string
  /**
   * Format: uuid
   * @description associated row in the parent table (which means: this row is part of a child table)
   */
  'rowFilter.row_revs.parent_id': string
  /** Format: extensions.geometry(GeometryCollection,4326) */
  'rowFilter.row_revs.geometry': string
  /** Format: real */
  'rowFilter.row_revs.geometry_n': string
  /** Format: real */
  'rowFilter.row_revs.geometry_e': string
  /** Format: real */
  'rowFilter.row_revs.geometry_s': string
  /** Format: real */
  'rowFilter.row_revs.geometry_w': string
  /** Format: jsonb */
  'rowFilter.row_revs.data': string
  /** Format: boolean */
  'rowFilter.row_revs.deleted': string
  /** Format: timestamp with time zone */
  'rowFilter.row_revs.client_rev_at': string
  /** Format: text */
  'rowFilter.row_revs.client_rev_by': string
  /** Format: timestamp with time zone */
  'rowFilter.row_revs.server_rev_at': string
  /**
   * Format: text
   * @description hashed value the fields: row_id, table_id, geometry, data, deleted
   */
  'rowFilter.row_revs.rev': string
  /**
   * Format: text
   * @description hash of the previous revision
   */
  'rowFilter.row_revs.parent_rev': string
  /**
   * Format: ARRAY
   * @description array of hashes of all previous revisions
   */
  'rowFilter.row_revs.revisions': string
  /**
   * Format: integer
   * @description depth of the revision tree
   */
  'rowFilter.row_revs.depth': string
  /** @description rows */
  'body.rows': definitions['rows']
  /**
   * Format: uuid
   * @description primary key
   */
  'rowFilter.rows.id': string
  /**
   * Format: uuid
   * @description associated table
   */
  'rowFilter.rows.table_id': string
  /**
   * Format: uuid
   * @description associated row in the parent table (which means: this row is part of a child table)
   */
  'rowFilter.rows.parent_id': string
  /**
   * Format: extensions.geometry(GeometryCollection,4326)
   * @description row geometry (GeometryCollection)
   */
  'rowFilter.rows.geometry': string
  /**
   * Format: real
   * @description Northernmost point of the geometry. Used to filter geometries for viewport client-side
   */
  'rowFilter.rows.geometry_n': string
  /**
   * Format: real
   * @description Easternmost point of the geometry. Used to filter geometries for viewport client-side
   */
  'rowFilter.rows.geometry_e': string
  /**
   * Format: real
   * @description Southernmost point of the geometry. Used to filter geometries for viewport client-side
   */
  'rowFilter.rows.geometry_s': string
  /**
   * Format: real
   * @description Westernmost point of the geometry. Used to filter geometries for viewport client-side
   */
  'rowFilter.rows.geometry_w': string
  /**
   * Format: jsonb
   * @description fields (keys) and data (values) according to the related fields table
   */
  'rowFilter.rows.data': string
  /**
   * Format: timestamp with time zone
   * @description time of last edit on client
   */
  'rowFilter.rows.client_rev_at': string
  /**
   * Format: text
   * @description user editing last on client
   */
  'rowFilter.rows.client_rev_by': string
  /**
   * Format: timestamp with time zone
   * @description time of last edit on server
   */
  'rowFilter.rows.server_rev_at': string
  /** Format: text */
  'rowFilter.rows.rev': string
  /** Format: text */
  'rowFilter.rows.parent_rev': string
  /** Format: ARRAY */
  'rowFilter.rows.revisions': string
  /** Format: integer */
  'rowFilter.rows.depth': string
  /**
   * Format: boolean
   * @description marks if the row is deleted
   */
  'rowFilter.rows.deleted': string
  /** Format: ARRAY */
  'rowFilter.rows.conflicts': string
  /** @description tables */
  'body.tables': definitions['tables']
  /**
   * Format: uuid
   * @description primary key
   */
  'rowFilter.tables.id': string
  /**
   * Format: uuid
   * @description associated project
   */
  'rowFilter.tables.project_id': string
  /**
   * Format: uuid
   * @description parent table
   */
  'rowFilter.tables.parent_id': string
  /**
   * Format: text
   * @description releation with parent table: 1:1 or 1:n
   */
  'rowFilter.tables.rel_type': string
  /**
   * Format: text
   * @description name for use in db and url (lowercase, no special characters)
   */
  'rowFilter.tables.name': string
  /**
   * Format: text
   * @description name for use when labeling
   */
  'rowFilter.tables.label': string
  /** Format: text */
  'rowFilter.tables.single_label': string
  /**
   * Format: ARRAY
   * @description fields used to label and sort rows
   */
  'rowFilter.tables.label_fields': string
  /**
   * Format: text
   * @description characters used to separate fields when labelling rows
   */
  'rowFilter.tables.label_fields_separator': string
  /**
   * Format: smallint
   * @description enables ordering the tables of a project
   */
  'rowFilter.tables.ord': string
  /**
   * Format: text
   * @description What type of options list will this be?
   */
  'rowFilter.tables.option_type': string
  /**
   * Format: timestamp with time zone
   * @description time of last edit on client
   */
  'rowFilter.tables.client_rev_at': string
  /**
   * Format: text
   * @description user editing last on client
   */
  'rowFilter.tables.client_rev_by': string
  /**
   * Format: timestamp with time zone
   * @description time of last edit on server
   */
  'rowFilter.tables.server_rev_at': string
  /** Format: boolean */
  'rowFilter.tables.deleted': string
  /** @description tile_layers */
  'body.tile_layers': definitions['tile_layers']
  /** Format: uuid */
  'rowFilter.tile_layers.id': string
  /** Format: text */
  'rowFilter.tile_layers.label': string
  /** Format: text */
  'rowFilter.tile_layers.url_template': string
  /** Format: ARRAY */
  'rowFilter.tile_layers.subdomains': string
  /** Format: numeric */
  'rowFilter.tile_layers.max_zoom': string
  /** Format: numeric */
  'rowFilter.tile_layers.min_zoom': string
  /** Format: numeric */
  'rowFilter.tile_layers.opacity': string
  /** Format: text */
  'rowFilter.tile_layers.wms_base_url': string
  /** Format: text */
  'rowFilter.tile_layers.wms_format': string
  /** Format: ARRAY */
  'rowFilter.tile_layers.wms_layers': string
  /** Format: jsonb */
  'rowFilter.tile_layers.wms_parameters': string
  /** Format: text */
  'rowFilter.tile_layers.wms_request': string
  /** Format: text */
  'rowFilter.tile_layers.wms_service': string
  /** Format: ARRAY */
  'rowFilter.tile_layers.wms_styles': string
  /** Format: boolean */
  'rowFilter.tile_layers.wms_transparent': string
  /** Format: text */
  'rowFilter.tile_layers.wms_version': string
  /** Format: timestamp with time zone */
  'rowFilter.tile_layers.client_rev_at': string
  /** Format: text */
  'rowFilter.tile_layers.client_rev_by': string
  /** Format: timestamp with time zone */
  'rowFilter.tile_layers.server_rev_at': string
  /** Format: boolean */
  'rowFilter.tile_layers.deleted': string
  /** @description users */
  'body.users': definitions['users']
  /**
   * Format: uuid
   * @description primary key
   */
  'rowFilter.users.id': string
  /**
   * Format: text
   * @description name
   */
  'rowFilter.users.name': string
  /**
   * Format: text
   * @description email
   */
  'rowFilter.users.email': string
  /**
   * Format: uuid
   * @description associated account
   */
  'rowFilter.users.account_id': string
  /**
   * Format: text
   * @description associated auth
   */
  'rowFilter.users.auth_user_id': string
  /**
   * Format: timestamp with time zone
   * @description time of last edit on client
   */
  'rowFilter.users.client_rev_at': string
  /**
   * Format: text
   * @description user editing last on client
   */
  'rowFilter.users.client_rev_by': string
  /**
   * Format: timestamp with time zone
   * @description time of last edit on server
   */
  'rowFilter.users.server_rev_at': string
  /** Format: boolean */
  'rowFilter.users.deleted': string
  /** @description version_types */
  'body.version_types': definitions['version_types']
  /**
   * Format: text
   * @description explains the version type
   */
  'rowFilter.version_types.value': string
  /**
   * Format: smallint
   * @description enables sorting at will
   */
  'rowFilter.version_types.sort': string
  /** Format: text */
  'rowFilter.version_types.comment': string
  /**
   * Format: timestamp with time zone
   * @description time of last edit on server
   */
  'rowFilter.version_types.server_rev_at': string
  /** Format: boolean */
  'rowFilter.version_types.deleted': string
  /** @description widget_types */
  'body.widget_types': definitions['widget_types']
  /**
   * Format: text
   * @description the relation type
   */
  'rowFilter.widget_types.value': string
  /**
   * Format: boolean
   * @description whether the widget needs an options list
   */
  'rowFilter.widget_types.needs_list': string
  /**
   * Format: smallint
   * @description enables sorting at will
   */
  'rowFilter.widget_types.sort': string
  /**
   * Format: text
   * @description explains the version type
   */
  'rowFilter.widget_types.comment': string
  /**
   * Format: timestamp with time zone
   * @description time of last edit on server
   */
  'rowFilter.widget_types.server_rev_at': string
  /** Format: boolean */
  'rowFilter.widget_types.deleted': string
  /** @description widgets_for_fields */
  'body.widgets_for_fields': definitions['widgets_for_fields']
  /** Format: text */
  'rowFilter.widgets_for_fields.field_value': string
  /** Format: text */
  'rowFilter.widgets_for_fields.widget_value': string
  /**
   * Format: timestamp with time zone
   * @description time of last edit on server
   */
  'rowFilter.widgets_for_fields.server_rev_at': string
  /** Format: boolean */
  'rowFilter.widgets_for_fields.deleted': string
}
